import tkinter as tk
from tkinter import messagebox
import pickle

# Initialize the main window
window = tk.Tk()
window.title("To-Do List")

# Function to add a task to the list
def task_adding():
    todo = task_add.get()
    if todo != "":
        todo_box.insert(tk.END, todo)
        task_add.delete(0, tk.END)
    else:
        messagebox.showwarning(title="Attention !!!", message="To add a task, please enter some task!!")

# Function to remove a selected task from the list
def task_removing():
    try:
        index_todo = todo_box.curselection()[0]
        todo_box.delete(index_todo)
    except:
        messagebox.showwarning(title="Attention!!", message="To delete a task, you must select a task !!")

# Function to load tasks from a file
def task_load():
    try:
        tasks = pickle.load(open("tasks.dat", "rb"))
        todo_box.delete(0, tk.END)
        for task in tasks:
            todo_box.insert(tk.END, task)
    except FileNotFoundError:
        messagebox.showwarning(title="Attention", message="Cannot find tasks.dat")

# Function to save tasks to a file
def task_save():
    tasks = todo_box.get(0, todo_box.size())
    pickle.dump(tasks, open("tasks.dat", "wb"))

# Create a frame to hold the listbox and scrollbar
list_frame = tk.Frame(window)
list_frame.pack()

# Create the listbox for tasks
todo_box = tk.Listbox(list_frame, height=20, width=60)
todo_box.pack(side=tk.LEFT)

# Create a scrollbar for the listbox
scroller = tk.Scrollbar(list_frame)
scroller.pack(side=tk.RIGHT, fill=tk.Y)
todo_box.config(yscrollcommand=scroller.set)
scroller.config(command=todo_box.yview)

# Create an entry widget for adding new tasks
task_add = tk.Entry(window, width=50)
task_add.pack()

# Create buttons for adding, removing, loading, and saving tasks
add_task_button = tk.Button(window, text="Click to Add Task", font=("Arial", 20, "bold"), background="red", width=35, command=task_adding)
add_task_button.pack()

remove_task_button = tk.Button(window, text="Click to Remove Task", font=("Arial", 20, "bold"), background="yellow", width=35, command=task_removing)
remove_task_button.pack()

load_task_button = tk.Button(window, text="Click to Load Tasks", font=("Arial", 20, "bold"), background="green", width=35, command=task_load)
load_task_button.pack()

save_task_button = tk.Button(window, text="Click to Save Tasks", font=("Arial", 20, "bold"), background="blue", width=35, command=task_save)
save_task_button.pack()

# Run the Tkinter event loop
window.mainloop()
